trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
# STAGE 1: DEPLOY INFRASTRUCTURE
- stage: DeployInfrastructure
  displayName: 'Deploy Terraform Infrastructure'
  jobs:
  - job: Terraform
    displayName: 'Run Terraform Apply'
    steps:

    # Step 1: Install Terraform
    - task: TerraformInstaller@1
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: 'latest'

    # Step 2: Export credentials and run Terraform
    - script: |
        echo "Exporting Azure credentials..."
        export ARM_CLIENT_ID=$(servicePrincipalId)
        export ARM_CLIENT_SECRET=$(servicePrincipalKey)
        export ARM_SUBSCRIPTION_ID=$(subscriptionId)
        export ARM_TENANT_ID=$(tenantId)

        echo "Initializing Terraform..."
        terraform init

        echo "Applying Terraform..."
        terraform apply -auto-approve
      displayName: 'Terraform Init and Apply'

# STAGE 2: BUILD, PUSH, AND DEPLOY CONTAINER
- stage: BuildPushAndDeploy
  displayName: 'Build, Push, and Deploy Image'
  dependsOn: DeployInfrastructure
  jobs:
  - job: Docker
    displayName: 'Build, Push and Deploy'
    steps:

    - task: Docker@2
      displayName: 'Login to ACR'
      inputs:
        command: 'login'
        containerRegistry: 'Docker Reg'

    - task: Docker@2
      displayName: 'Build and Push Image to ACR'
      inputs:
        command: 'buildAndPush'
        repository: 'portfolio-site'
        dockerfile: '**/Dockerfile'
        tags: 'latest'

    - task: AzureWebAppContainer@1
      displayName: 'Deploy Container to App Service'
      inputs:
        azureSubscription: 'Dev-Portal'
        appName: 'portfolio-demo'
        imageName: 'portfolioregistrytf020qrb.azurecr.io/portfolio-site:latest'
